@using Askyl.Dsm.WebHosting.Data.Runtime
@using Askyl.Dsm.WebHosting.Ui.Services

@implements IDialogContentComponent

@inject IDialogService DialogService
@inject IDotnetVersionService DotnetVersionService

<FluentDialogHeader ShowDismiss="true">
    <FluentLabel Typo="Typography.H2">.NET Versions</FluentLabel>
</FluentDialogHeader>

<FluentDialogFooter>
    <FluentButton OnClick="CancelAsync" Appearance="Appearance.Accent" Style="flex-grow: 1;">Close</FluentButton>
</FluentDialogFooter>

<FluentDialogBody Style="min-height: auto;">
    @if (IsLoading)
    {
        <FluentStack Orientation="Orientation.Horizontal" HorizontalAlignment="HorizontalAlignment.Center">
            <FluentProgressRing />
            <FluentLabel>Searching for .NET versions...</FluentLabel>
        </FluentStack>
    }
    else if (DotnetVersions?.Any() == true)
    {
        <FluentCard>
            <FluentStack Orientation="Orientation.Vertical" VerticalGap="12">
                @foreach (var framework in DotnetVersions)
                {
                    <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
                        <FluentIcon Value="@GetFrameworkIcon(framework.Type)" />
                        <FluentLabel Typo="Typography.Body">
                            <strong>@framework.Type:</strong> @framework.Version
                        </FluentLabel>
                    </FluentStack>
                }
            </FluentStack>
        </FluentCard>
    }
    else if (ErrorMessage != null)
    {
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
            <FluentIcon Value="@(new IconsRegular24.Warning())" Color="Color.Error" />
            <FluentLabel Typo="Typography.Body" Color="Color.Error">
                @ErrorMessage
            </FluentLabel>
        </FluentStack>
    }
    else
    {
        <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Center">
            <FluentIcon Value="@(new IconsRegular24.Info())" Color="Color.Warning" />
            <FluentLabel Typo="Typography.Body">
                No .NET installation found. Make sure .NET is installed.
            </FluentLabel>
        </FluentStack>
    }
</FluentDialogBody>

@code
{
    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    private bool IsLoading { get; set; } = false;
    private List<FrameworkInfo>? DotnetVersions { get; set; }
    private string? ErrorMessage { get; set; }

    protected override async Task OnParametersSetAsync()
        => await LoadDotnetVersions();

    private async Task CancelAsync()
        => await Dialog.CancelAsync();

    private async Task LoadDotnetVersions()
    {
        IsLoading = true;
        ErrorMessage = null;

        try
        {
            DotnetVersions = await DotnetVersionService.GetInstalledVersionsAsync();
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error while searching for global .NET version: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }

    private Icon GetFrameworkIcon(string frameworkType)
    {
        return frameworkType switch
        {
            "SDK (Main)" => new IconsRegular16.Star(),
            "SDK" => new IconsRegular16.Settings(),
            "ASP.NET Core" => new IconsRegular16.Globe(),
            "Runtime" => new IconsRegular16.Play(),
            _ => new IconsRegular16.Code()
        };
    }
}